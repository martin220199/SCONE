type timeDependentPhysicsPackage;

pop      500; // 5000
timeSteps   200; 
XSdata   ce;
dataType ce;
timeIncrement 0.1;
cycles 1000; //100
buffer 1000;

//combing 1; 
precursors 1;
//useForcedPrecursorDecay 0;

outputFormat asciiJSON;
collisionOperator { neutronCE {type neutronCEkineticstd; minEnergy 1.0e-11; maxEnergy 20; precursors 1; branchless 0;}} //precursors 1; //branchless 1

transportOperator { type transportOperatorDT; //currently will only support this
                  }

source {
  type pointSource;
  r (0 0 0);
  particle neutron;
  E 0.025E-06;
}

tally  {
  hittingProbability1 { type hittingProbClerk;
    response (pop); pop {type neutronResponse;}
    maxT 20;
    minPop 0;
    maxPop 600;
    cycles 100;
    map { type timeMap; grid lin; min 0.0; max 20.0; N 2000;}
    }
  hittingProbability2 { type hittingProbClerk;
    response (pop); pop {type neutronResponse;}
    maxT 20;
    minPop 0;
    maxPop 700;
    cycles 100;
    map { type timeMap; grid lin; min 0.0; max 20.0; N 2000;}
    }
  hittingProbability3 { type hittingProbClerk;
    response (pop); pop {type neutronResponse;}
    maxT 20;
    minPop 0;
    maxPop 800;
    cycles 100;
    map { type timeMap; grid lin; min 0.0; max 20.0; N 2000;}
    }
  hittingProbability4 { type hittingProbClerk;
    response (pop); pop {type neutronResponse;}
    maxT 20;
    minPop 0;
    maxPop 1000;
    cycles 100;
    map { type timeMap; grid lin; min 0.0; max 20.0; N 2000;}
    }
  
  fissionRate { type collisionClerk; response (fission); fission { type macroResponse; MT -6;}
                map {type timeMap; grid lin; min 0.0; max 200.0; N 200;}
                norm 1; }

  neutronPop { type temporalPopClerk;
    map { type timeMap; grid lin; min 0.0; max 20.0; N 200;}
    response (pop); pop {type neutronResponse;}
    }
  precuPop { type temporalPopClerk;
    map { type timeMap; grid lin; min 0.0; max 20.0; N 200;}
    response (pop); pop {type precursorResponse;}
    }
  }
geometry {
    type geometryStd;
    boundary (1 1 1 1 1 1);
    graph {type shrunk;}

    surfaces
    {
      squareBound { id 1; type box; origin ( 0.0  0.0  0.0); halfwidth (50.0 50.0 50.0); }
    }


    cells
    {
    }

    universes
    {

      root
      {
	  id 1;
	  type rootUniverse;
	  border 1;
	  fill hydrogen_with_uranium;
      }
    }
}

nuclearData {
  handles {
    ce { type aceNeutronDatabase; aceLibrary /home/tbonnet/code/SCONE_KIN/SCONE/scripts/endf_lib.xsfile;}}
  materials {

    hydrogen_with_uranium {
      temp 12345;
      composition {
      //1001.72    2.9623E-05;
      1001.72    2.0E-05;
      92235.72   9.3472E-09;	  }
      }

}

}
