type timeDependentPhysicsPackage;

pop      1000; // 5000
timeSteps   10000; 
XSdata   ce;
dataType ce;
timeIncrement 0.00001;
cycles 100; //100
buffer 100000;
outputFormat asciiJSON;
outputFile Poisson;


//combing 1; 
precursors 1;
//useForcedPrecursorDecay 0;

collisionOperator { neutronCE {type neutronCEkineticstd; minEnergy 1.0e-11; maxEnergy 20; precursors 1; branchless 0;}} //precursors 1; //branchless 1

transportOperator { type transportOperatorDT; //currently will only support this
                  }

source {
  type pointSource;
  r (0 0 0);
  particle neutron;
  E 0.025E-06;
}

tally  {
  hittingProbability1 { type hittingProbClerk;
    response (pop); pop {type neutronResponse;}
    maxT 0.1;
    minPop 0;
    maxPop 10500;
    cycles 100;
    map { type timeMap; grid lin; min 0.0; max 0.1; N 10000;}
    }
  hittingProbability2 { type hittingProbClerk;
    response (pop); pop {type neutronResponse;}
    maxT 0.1;
    minPop 0;
    maxPop 11000;
    cycles 100;
    map { type timeMap; grid lin; min 0.0; max 0.1; N 10000;}
    }
  hittingProbability3 { type hittingProbClerk;
    response (pop); pop {type neutronResponse;}
    maxT 0.1;
    minPop 0;
    maxPop 12000;
    cycles 100;
    map { type timeMap; grid lin; min 0.0; max 0.1; N 10000;}
    }
  hittingProbability4 { type hittingProbClerk;
    response (pop); pop {type neutronResponse;}
    maxT 0.1;
    minPop 0;
    maxPop 15000;
    cycles 100;
    map { type timeMap; grid lin; min 0.0; max 0.1; N 10000;}
    }
  
  fissionRate { type collisionClerk; response (fission); fission { type macroResponse; MT -6;}
                map {type timeMap; grid lin; min 0.0; max 0.1; N 10000;}
                norm 1;}

  captureRate { type collisionClerk; response (capture); capture {type macroResponse; MT -2;}
  map {type timeMap; grid lin; min 0.0; max 0.1; N 10000;}
  norm 1;}

  neutronPop { type temporalPopClerk;
    map { type timeMap; grid lin; min 0.0; max 0.1; N 10000;}
    response (pop); pop {type neutronResponse;}
    }
  precuPop { type temporalPopClerk;
    map { type timeMap; grid lin; min 0.0; max 0.1; N 10000;}
    response (pop); pop {type precursorResponse;}
    }

    lambda { type lambdaAnalogClerk; batches 1000000;}
    nuDelayed { type nuAnalogClerk; delayed 1; batches 1000000;}
    nuPrompt { type nuAnalogClerk; batches 1000000;}
    lifetime {type lifetimeClerk; batches 1000000;}

  }
geometry {
    type geometryStd;
    boundary (1 1 1 1 1 1);
    graph {type shrunk;}

    surfaces
    {
      squareBound { id 1; type box; origin ( 0.0  0.0  0.0); halfwidth (50.0 50.0 50.0); }
    }


    cells
    {
    }

    universes
    {

      root
      {
	  id 1;
	  type rootUniverse;
	  border 1;
	  fill hydrogen_with_uranium;
      }
    }
}

nuclearData {
  handles {
    ce { type aceNeutronDatabase; aceLibrary /home/tlfab2/code/SCONE/scripts/endf_lib.xsfile;}}
  materials {

    hydrogen_with_uranium {
      temp 12345;
      composition {
      //1001.72    2.9623E-05;
      //1001.72    2.0E-05;
      1001.72    6.6856E-02;
      8016.72    8.21578701E-02;
      8017.72    3.129604E-05;
      8018.72    1.688339E-04;
      92235.72   2.73228041E-04;
      92238.72  2.4197772E-02;}
      }
}

}
