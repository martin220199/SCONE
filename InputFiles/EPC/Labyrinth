type timeDependentPhysicsPackage;

pop      100000; //5000
timeSteps   100;
XSdata   ce;
dataType ce;
timeIncrement 2.0E-09;
cycles 5; //10
combing 0;                                        //responseType 1; responseDim space; response (9 -9); fittestFactor 0.0001
                                                  //responseType 1; responseDim cells; response 100; fittestFactor 0.01;
                                                  //responseType 0; responseDim cells; response (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100); fittestFactor 0.01
                                                  //responseType 0; responseDim cells; response (36 37 38 39 40 44 48 49 50 55 56 57 58 59 60 67 68 69 70 77 78 79 80 87 88 89 90 98 99 100); fittestFactor 0.01;
EPC {useEPC 1; fitnessHandling 1; responseType 0; responseDim cells; response (36 37 38 39 40 44 48 49 50 55 56 57 58 59 60 67 68 69 70 77 78 79 80 87 88 89 90 98 99 100); fittestFactor 0.01; nReproductions 2;}
                                                                               // 3 4 5 6 7 8 9 10 11 12 response (12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30)


//YESS!! BOTH GLOBAL CELL AND LOCAL SPACE DO BETTER NOW!!! JUST NEED TO TUNE FITNEESSFACTOR. NEED HIGHER FITNESSFACTOR ON CELL - WHY? BECAUSE NEED TO INDUCE EXPLORATION!!!!!!!

//MAYBE MODIFY TASK SO LOCAL OPTIMA? ONE ARROW STRAIGHT DOWN!? YES FROM MIDPOINT

outputFormat asciiJSON;
collisionOperator { neutronCE {type neutronCEstd;}}

transportOperator { type transportOperatorDT;
                  }

source {
  type pointSource;
  r (-9.0 9.0 0.0);
  particle neutron;
  E 10; //1.0e-3
}

tally  {

  flux_time { type collisionClerk;
    map { type multiMap; maps (map1 map2);
    // NB this has to be this order: cells first, then time
    map1 { type cellMap; cells (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100);}
    map2 { type timeMap; grid lin; min 0.0; max 2.0E-07; N 100;}
    }
    response (flux); flux {type fluxResponse;}
  }
  }

geometry {
    type geometryStd;
    boundary (1 1 1 1 1 1); //(1 1 1 1 1 1);
    graph {type shrunk;}

    surfaces
    {
      universeBox { id 21; type box; origin (0.0 0.0 0.0); halfwidth (10.0 10.0 1.0);}

      //columns
      c_one   { id 1; type box; origin (-9.0 0.0 0.0); halfwidth (1.0 10.0 1.0);}
      c_two   { id 2; type box; origin (-7.0 0.0 0.0); halfwidth (1.0 10.0 1.0);}
      c_three { id 3; type box; origin (-5.0 0.0 0.0); halfwidth (1.0 10.0 1.0);}
      c_four  { id 4; type box; origin (-3.0 0.0 0.0); halfwidth (1.0 10.0 1.0);}
      c_five  { id 5; type box; origin (-1.0 0.0 0.0); halfwidth (1.0 10.0 1.0);}
      c_six   { id 6; type box; origin (1.0 0.0 0.0); halfwidth (1.0 10.0 1.0);}
      c_seven { id 7; type box; origin (3.0 0.0 0.0); halfwidth (1.0 10.0 1.0);}
      c_eight { id 8; type box; origin (5.0 0.0 0.0); halfwidth (1.0 10.0 1.0);}
      c_nine  { id 9; type box; origin (7.0 0.0 0.0); halfwidth (1.0 10.0 1.0);}
      c_ten   { id 10; type box; origin (9.0 0.0 0.0); halfwidth (1.0 10.0 1.0);}

      //rows
      r_one   { id 11; type box; origin (0.0 9.0 0.0); halfwidth (10.0 1.0 1.0);}
      r_two   { id 12; type box; origin (0.0 7.0 0.0); halfwidth (10.0 1.0 1.0);}
      r_three { id 13; type box; origin (0.0 5.0 0.0); halfwidth (10.0 1.0 1.0);}
      r_four  { id 14; type box; origin (0.0 3.0 0.0); halfwidth (10.0 1.0 1.0);}
      r_five  { id 15; type box; origin (0.0 1.0 0.0); halfwidth (10.0 1.0 1.0);}
      r_six   { id 16; type box; origin (0.0 -1.0 0.0); halfwidth (10.0 1.0 1.0);}
      r_seven { id 17; type box; origin (0.0 -3.0 0.0); halfwidth (10.0 1.0 1.0);}
      r_eight { id 18; type box; origin (0.0 -5.0 0.0); halfwidth (10.0 1.0 1.0);}
      r_nine  { id 19; type box; origin (0.0 -7.0 0.0); halfwidth (10.0 1.0 1.0);}
      r_ten   { id 20; type box; origin (0.0 -9.0 0.0); halfwidth (10.0 1.0 1.0);}
    } 

    cells
    {
      //row 1
      1 {id 1; type simpleCell;  surfaces (-1 -11); filltype mat; material m1;}
      2 {id 2; type simpleCell;  surfaces (-2 -11); filltype mat; material m1;}
      3 {id 3; type simpleCell;  surfaces (-3 -11); filltype mat; material m2;}
      4 {id 4; type simpleCell;  surfaces (-4 -11); filltype mat; material m2;}
      5 {id 5; type simpleCell;  surfaces (-5 -11); filltype mat; material m2;}
      6 {id 6; type simpleCell;  surfaces (-6 -11); filltype mat; material m2;}
      7 {id 7; type simpleCell;  surfaces (-7 -11); filltype mat; material m2;}
      8 {id 8; type simpleCell;  surfaces (-8 -11); filltype mat; material m2;}
      9 {id 9; type simpleCell;  surfaces (-9 -11); filltype mat; material m2;}
      10 {id 10; type simpleCell;  surfaces (-10 -11); filltype mat; material m2;}


      //row2
      11 {id 11; type simpleCell;  surfaces (-1 -12); filltype mat; material m2;}
      12 {id 12; type simpleCell;  surfaces (-2 -12); filltype mat; material m1;}
      13 {id 13; type simpleCell;  surfaces (-3 -12); filltype mat; material m1;}
      14 {id 14; type simpleCell;  surfaces (-4 -12); filltype mat; material m2;}
      15 {id 15; type simpleCell;  surfaces (-5 -12); filltype mat; material m2;}
      16 {id 16; type simpleCell;  surfaces (-6 -12); filltype mat; material m2;}
      17 {id 17; type simpleCell;  surfaces (-7 -12); filltype mat; material m2;}
      18 {id 18; type simpleCell;  surfaces (-8 -12); filltype mat; material m2;}
      19 {id 19; type simpleCell;  surfaces (-9 -12); filltype mat; material m2;}
      20 {id 20; type simpleCell;  surfaces (-10 -12); filltype mat; material m2;}

      //row3
      21 {id 21; type simpleCell;  surfaces (-1 -13); filltype mat; material m2;}
      22 {id 22; type simpleCell;  surfaces (-2 -13); filltype mat; material m2;}
      23 {id 23; type simpleCell;  surfaces (-3 -13); filltype mat; material m1;}
      24 {id 24; type simpleCell;  surfaces (-4 -13); filltype mat; material m1;}
      25 {id 25; type simpleCell;  surfaces (-5 -13); filltype mat; material m2;}
      26 {id 26; type simpleCell;  surfaces (-6 -13); filltype mat; material m2;}
      27 {id 27; type simpleCell;  surfaces (-7 -13); filltype mat; material m2;}
      28 {id 28; type simpleCell;  surfaces (-8 -13); filltype mat; material m2;}
      29 {id 29; type simpleCell;  surfaces (-9 -13); filltype mat; material m2;}
      30 {id 30; type simpleCell;  surfaces (-10 -13); filltype mat; material m2;}

      //row4
      31 {id 31; type simpleCell;  surfaces (-1  -14); filltype mat; material m2;}
      32 {id 32; type simpleCell;  surfaces (-2  -14); filltype mat; material m2;}
      33 {id 33; type simpleCell;  surfaces (-3  -14); filltype mat; material m2;}
      34 {id 34; type simpleCell;  surfaces (-4  -14); filltype mat; material m1;}
      35 {id 35; type simpleCell;  surfaces (-5  -14); filltype mat; material m1;}
      36 {id 36; type simpleCell;  surfaces (-6  -14); filltype mat; material m2;}
      37 {id 37; type simpleCell;  surfaces (-7  -14); filltype mat; material m2;}
      38 {id 38; type simpleCell;  surfaces (-8  -14); filltype mat; material m2;}
      39 {id 39; type simpleCell;  surfaces (-9  -14); filltype mat; material m2;}
      40 {id 40; type simpleCell;  surfaces (-10 -14); filltype mat; material m2;}

      //row5
      41 {id 41; type simpleCell;  surfaces (-1  -15); filltype mat; material m2;}
      42 {id 42; type simpleCell;  surfaces (-2  -15); filltype mat; material m2;}
      43 {id 43; type simpleCell;  surfaces (-3  -15); filltype mat; material m2;}
      44 {id 44; type simpleCell;  surfaces (-4  -15); filltype mat; material m2;}
      45 {id 45; type simpleCell;  surfaces (-5  -15); filltype mat; material m1;}
      46 {id 46; type simpleCell;  surfaces (-6  -15); filltype mat; material m1;}
      47 {id 47; type simpleCell;  surfaces (-7  -15); filltype mat; material m1;}
      48 {id 48; type simpleCell;  surfaces (-8  -15); filltype mat; material m1;}
      49 {id 49; type simpleCell;  surfaces (-9  -15); filltype mat; material m1;}
      50 {id 50; type simpleCell;  surfaces (-10 -15); filltype mat; material m1;}

      //row6
      51 {id 51; type simpleCell;  surfaces (-1  -16); filltype mat; material m2;}
      52 {id 52; type simpleCell;  surfaces (-2  -16); filltype mat; material m2;}
      53 {id 53; type simpleCell;  surfaces (-3  -16); filltype mat; material m2;}
      54 {id 54; type simpleCell;  surfaces (-4  -16); filltype mat; material m2;}
      55 {id 55; type simpleCell;  surfaces (-5  -16); filltype mat; material m2;}
      56 {id 56; type simpleCell;  surfaces (-6  -16); filltype mat; material m2;}
      57 {id 57; type simpleCell;  surfaces (-7  -16); filltype mat; material m2;}
      58 {id 58; type simpleCell;  surfaces (-8  -16); filltype mat; material m1;}
      59 {id 59; type simpleCell;  surfaces (-9  -16); filltype mat; material m1;}
      60 {id 60; type simpleCell;  surfaces (-10 -16); filltype mat; material m1;}

      //row7
      61 {id 61; type simpleCell;  surfaces (-1  -17); filltype mat; material m2;}
      62 {id 62; type simpleCell;  surfaces (-2  -17); filltype mat; material m2;}
      63 {id 63; type simpleCell;  surfaces (-3  -17); filltype mat; material m2;}
      64 {id 64; type simpleCell;  surfaces (-4  -17); filltype mat; material m2;}
      65 {id 65; type simpleCell;  surfaces (-5  -17); filltype mat; material m2;}
      66 {id 66; type simpleCell;  surfaces (-6  -17); filltype mat; material m2;}
      67 {id 67; type simpleCell;  surfaces (-7  -17); filltype mat; material m2;}
      68 {id 68; type simpleCell;  surfaces (-8  -17); filltype mat; material m1;}
      69 {id 69; type simpleCell;  surfaces (-9  -17); filltype mat; material m1;}
      70 {id 70; type simpleCell;  surfaces (-10 -17); filltype mat; material m1;}

      //row8
      71 {id 71; type simpleCell;  surfaces (-1  -18); filltype mat; material m2;}
      72 {id 72; type simpleCell;  surfaces (-2  -18); filltype mat; material m2;}
      73 {id 73; type simpleCell;  surfaces (-3  -18); filltype mat; material m2;}
      74 {id 74; type simpleCell;  surfaces (-4  -18); filltype mat; material m2;}
      75 {id 75; type simpleCell;  surfaces (-5  -18); filltype mat; material m2;}
      76 {id 76; type simpleCell;  surfaces (-6  -18); filltype mat; material m2;}
      77 {id 77; type simpleCell;  surfaces (-7  -18); filltype mat; material m2;}
      78 {id 78; type simpleCell;  surfaces (-8  -18); filltype mat; material m1;}
      79 {id 79; type simpleCell;  surfaces (-9  -18); filltype mat; material m1;}
      80 {id 80; type simpleCell;  surfaces (-10 -18); filltype mat; material m1;}

      //row9
      81 {id 81; type simpleCell;  surfaces (-1  -19); filltype mat; material m2;}
      82 {id 82; type simpleCell;  surfaces (-2  -19); filltype mat; material m2;}
      83 {id 83; type simpleCell;  surfaces (-3  -19); filltype mat; material m2;}
      84 {id 84; type simpleCell;  surfaces (-4  -19); filltype mat; material m2;}
      85 {id 85; type simpleCell;  surfaces (-5  -19); filltype mat; material m2;}
      86 {id 86; type simpleCell;  surfaces (-6  -19); filltype mat; material m2;}
      87 {id 87; type simpleCell;  surfaces (-7  -19); filltype mat; material m2;}
      88 {id 88; type simpleCell;  surfaces (-8  -19); filltype mat; material m3;}
      89 {id 89; type simpleCell;  surfaces (-9  -19); filltype mat; material m3;}
      90 {id 90; type simpleCell;  surfaces (-10 -19); filltype mat; material m3;}

      //row10
      91 {id 91; type simpleCell;  surfaces (-1  -20); filltype mat; material m2;}
      92 {id 92; type simpleCell;  surfaces (-2  -20); filltype mat; material m2;}
      93 {id 93; type simpleCell;  surfaces (-3  -20); filltype mat; material m2;}
      94 {id 94; type simpleCell;  surfaces (-4  -20); filltype mat; material m2;}
      95 {id 95; type simpleCell;  surfaces (-5  -20); filltype mat; material m2;}
      96 {id 96; type simpleCell;  surfaces (-6  -20); filltype mat; material m2;}
      97 {id 97; type simpleCell;  surfaces (-7  -20); filltype mat; material m2;}
      98 {id 98; type simpleCell;  surfaces (-8  -20); filltype mat; material m3;}
      99 {id 99; type simpleCell;  surfaces (-9  -20); filltype mat; material m3;}
      100 {id 100; type simpleCell;surfaces (-10 -20); filltype mat; material m3;}

    }

    universes
    {

      root{id 1; type rootUniverse; border 21; fill u<2>;}
      geom { id 2; type cellUniverse; cells (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100);}

    }
}

nuclearData {
  handles {
    ce { type aceNeutronDatabase; aceLibrary $SCONE_ACE;} }
  materials {

    // air
    m1 {
      temp 293;
      composition {
        07014.03  4.1985E-5; //6.6766E-2;
        08016.03  1.1263E-5; //3.3383E-2;
        }
    }

    // Boron
    m2 {
      temp 293;
      composition {
        //5010.03   0.1;
        //5011.03   0.1;

        04009.03 5.0;

        }
    }

    // water
    m3 {
      temp 293;
      composition {
        07014.03  6.6766E-2;
        08016.03  3.3383E-2;
        }
    }

}
}
