type timeDependentPhysicsPackage;

pop      5000; //5000
timeSteps   100;
XSdata   ce;
dataType ce;
timeIncrement 1.E-07;
cycles 10; //10
combing 0;

                                                                   //response (1 2 3)
EPC {useEPC 1; fitnessHandling 1; responseType 0; responseDim cells; response (1 2 3); fittestFactor 0.01; nReproductions 2;}

outputFormat asciiJSON;
collisionOperator { neutronCE {type neutronCEstd;}}

transportOperator { type transportOperatorDT;
                  }

source {
  type pointSource;
  r (0.0 0.0 0.0); //r (-5.0 0.0 0.0);
  particle neutron;
  E 5.0E-03;
}

tally  {

  flux_time { type collisionClerk;
    map { type multiMap; maps (map1 map2);
    // NB this has to be this order: cells first, then time
    map1 { type cellMap; cells (1 2 3); }
    map2 { type timeMap; grid lin; min 0.0; max 1E-05; N 100;}
    }
    response (flux); flux {type fluxResponse;}
  }
  }

geometry {
    type geometryStd;
    boundary (1 1 1 1 1 1);
    graph {type shrunk;}

    surfaces
    {
      universeBox { id 21; type box; origin (0.0 0.0 0.0); halfwidth (5.0 5.0 1.0);}

      //columns
      c_one   { id 1; type box; origin (-4.0 0.0 0.0); halfwidth (1.0 5.0 1.0);}
      c_two   { id 2; type box; origin (-2.0 0.0 0.0); halfwidth (1.0 5.0 1.0);}
      c_three { id 3; type box; origin (0.0 0.0 0.0); halfwidth (1.0 5.0 1.0);}
      c_four  { id 4; type box; origin (2.0 0.0 0.0); halfwidth (1.0 5.0 1.0);}
      c_five  { id 5; type box; origin (4.0 0.0 0.0); halfwidth (1.0 5.0 1.0);}

      //rows
      r_one   { id 11; type box; origin (0.0 4.0 0.0); halfwidth (5.0 1.0 1.0);}
      r_two   { id 12; type box; origin (0.0 2.0 0.0); halfwidth (5.0 1.0 1.0);}
      r_three { id 13; type box; origin (0.0 0.0 0.0); halfwidth (5.0 1.0 1.0);}
      r_four  { id 14; type box; origin (0.0 -2.0 0.0); halfwidth (5.0 1.0 1.0);}
      r_five  { id 15; type box; origin (0.0 -4.0 0.0); halfwidth (5.0 1.0 1.0);}
    } 

    cells
    {
      //row 1
      1 {id 1; type simpleCell;  surfaces (-1 -11); filltype mat; material m2;}
      2 {id 2; type simpleCell;  surfaces (-2 -11); filltype mat; material m2;}
      3 {id 3; type simpleCell;  surfaces (-3 -11); filltype mat; material m2;}
      4 {id 4; type simpleCell;  surfaces (-4 -11); filltype mat; material m2;}
      5 {id 5; type simpleCell;  surfaces (-5 -11); filltype mat; material m2;}

      //row2
      11 {id 11; type simpleCell;  surfaces (-1 -12); filltype mat; material m2;}
      12 {id 12; type simpleCell;  surfaces (-2 -12); filltype mat; material m1;}
      13 {id 13; type simpleCell;  surfaces (-3 -12); filltype mat; material m1;}
      14 {id 14; type simpleCell;  surfaces (-4 -12); filltype mat; material m1;}
      15 {id 15; type simpleCell;  surfaces (-5 -12); filltype mat; material m1;}

      //row3
      21 {id 21; type simpleCell;  surfaces (-1 -13); filltype mat; material m2;}
      22 {id 22; type simpleCell;  surfaces (-2 -13); filltype mat; material m1;}
      23 {id 23; type simpleCell;  surfaces (-3 -13); filltype mat; material m1;}
      24 {id 24; type simpleCell;  surfaces (-4 -13); filltype mat; material m2;}
      25 {id 25; type simpleCell;  surfaces (-5 -13); filltype mat; material m2;}

      //row4
      31 {id 31; type simpleCell;  surfaces (-1  -14); filltype mat; material m2;}
      32 {id 32; type simpleCell;  surfaces (-2  -14); filltype mat; material m1;}
      33 {id 33; type simpleCell;  surfaces (-3  -14); filltype mat; material m1;}
      34 {id 34; type simpleCell;  surfaces (-4  -14); filltype mat; material m1;}
      35 {id 35; type simpleCell;  surfaces (-5  -14); filltype mat; material m2;}

      //row5
      41 {id 41; type simpleCell;  surfaces (-1  -15); filltype mat; material m2;}
      42 {id 42; type simpleCell;  surfaces (-2  -15); filltype mat; material m2;}
      43 {id 43; type simpleCell;  surfaces (-3  -15); filltype mat; material m1;}
      44 {id 44; type simpleCell;  surfaces (-4  -15); filltype mat; material m1;}
      45 {id 45; type simpleCell;  surfaces (-5  -15); filltype mat; material m1;}

    }

    universes
    {

      root{id 1; type rootUniverse; border 21; fill u<2>;}
      geom { id 2; type cellUniverse; cells (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100);}

    }
}

nuclearData {
  handles {
    ce { type aceNeutronDatabase; aceLibrary $SCONE_ACE;} }
  materials {

    // hydrogen
    m1 {
      temp 12345;
      composition {
        1001.03   0.05803;}
    }

    // boron
    m2 {
      temp 12345;
      composition {
        5010.03   0.05;
        5011.03   0.05;

        }
    }
}
}
