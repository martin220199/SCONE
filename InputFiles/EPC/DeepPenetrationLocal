type timeDependentPhysicsPackage;

pop      100000; //5000
timeSteps   50;
XSdata   ce;
dataType ce;
timeIncrement 1.E-07;
cycles 3; //10
combing 0;

EPC {useEPC 0; fitnessHandling 1; responseType 1; responseDim space; response (200 0 0); fittestFactor 0.01; nReproductions 2;}

outputFormat asciiJSON;
collisionOperator { neutronCE {type neutronCEstd;}}

transportOperator { type transportOperatorDT;
                  }

source {
  type pointSource;
  r (0.0 0.0 0.0);
  particle neutron;
  E 10.0;
}

tally  {

  flux_time { type collisionClerk;
    map { type multiMap; maps (map1 map2 map3 map4);
    // NB this has to be this order: cells first, then time
    map1 { type spaceMap; axis x; grid lin; min -250; max 250; N 11;}
    map2 { type spaceMap; axis y; grid lin; min -250; max 250; N 11;}
    map3 { type spaceMap; axis z; grid lin; min -250; max 250; N 1;}
    map4 { type timeMap; grid lin; min 0.0; max 5E-06; N 50;}
    }
    response (flux); flux {type fluxResponse;}
  }
  }

geometry {
    type geometryStd;
    boundary (1 1 1 1 1 1); //(1 1 1 1 1 1);
    graph {type shrunk;}

    surfaces
    {
      universeBox { id 1; type box; origin (0.0 0.0 0.0); halfwidth (250.0 250.0 250.0);}

      canCylinderOne {id 2; type zTruncCylinder; origin (200 0 0); halfwidth 250; radius 25;}
      personCylinderOne {id 3; type zTruncCylinder; origin (200 0 0); halfwidth 250; radius 10;}

      canCylinderTwo {id 4; type zTruncCylinder; origin (-200 0 0); halfwidth 250; radius 25;}
      personCylinderTwo {id 5; type zTruncCylinder; origin (-200 0 0); halfwidth 250; radius 10;}

    } 

    cells
    {
    PersonOne { id 1; type simpleCell; surfaces (-3); filltype mat; material m1;} 
    PersonTwo { id 2; type simpleCell; surfaces (-5); filltype mat; material m4;} //m1
    CanOne { id 3; type simpleCell; surfaces (-2 3); filltype mat; material m2;} 
    CanTwo { id 4; type simpleCell; surfaces (-4 5); filltype mat; material m4;} //m3
    Medium { id 5; type simpleCell; surfaces (-1 2 4); filltype mat; material m4;} 

    }

    universes
    {

      root{id 1; type rootUniverse; border 1; fill u<2>;}
      geom { id 2; type cellUniverse; cells ( 1 2 3 4 5);}

    }
}

nuclearData {
  handles {
    ce { type aceNeutronDatabase; aceLibrary $SCONE_ACE;} }
  materials {

    // Water
    m1 {
      temp 293;
      composition {
        1001.03  6.6766E-2;  //H
        08016.03  3.3383E-2; //O
        }
    }

    // Aluminium-Boron
    m2 {
      temp 293;
      composition {
        5010.03   0.05;            //0.05
        5011.03   0.05;            //0.05
        13027.03  0.07803;        // 0.05803
        }
    }

    // Concrete
    m3 {
      temp 293;
      composition {
        01001.03  1.4868E-2;  // H
        06012.03  3.8144E-3;  // C
        08016.03  4.1519E-2;  // O
        11023.03  3.0400E-4;  // Na
        12024.03  5.8700E-4;  // Mg
        13027.03  7.3500E-4;  // Al
        14028.03  6.0370E-3;  // Si
        20040.03  1.1588E-2;  // Ca
        26056.03  1.9680E-4;  // Fe
        }
    }

    // Air
    m4 {
      temp 293;
      composition {
        07014.03  4.1985E-5;
        08016.03  1.1263E-5;
        }
    }

}
}
