type criticalKineticPhysicsPackage;

pop      1000; //1000


timeSteps   500; //500

active   500; //500
inactive 200; //200
XSdata   ce;
dataType ce;

timeIncrement 8.E-10; 
cycles 300; //200
buffer 100000;
combing 0;
precursors 0;
useForcedPrecursorDecay 0;
criticalWgtNorm 0;

decorrelationCycles 50; //50

kineticGeometry{enable 0; timeSteps (8); }

outputFormat asciiJSON;
collisionOperatorCritical { neutronCE {type neutronCEstd; minEnergy 1.0e-11; maxEnergy 20; precursors 0; couplingRatio 1.0;}} 

transportOperatorCritical { type transportOperatorDT; //currently will only support this
                  }

collisionOperatorKinetic { neutronCE {type neutronCEkineticstd; minEnergy 1.0e-11; maxEnergy 20; precursors 0; branchless 0;}} //precursors 1;

transportOperatorKinetic { type transportOperatorKineticDT; //currently will only support this
}

//source {
//  type pointSource;
//  r (0.0 0.0 0.0);
  //dir (0.0 0.0 0.0); no dir, isentropic
//  particle neutron;
//  E 1.0;
//}

tally  {

  flux_time { type collisionClerk; //collisionClerk_class, energyMap_class, scoreMemory_class
    map { type multiMap; maps (map1 map2);
    map1 { type timeMap; grid lin; min 0.0; max 400E-09; N 500;} // max 400E-09; N 500;} 
    map2 { type cellMap; cells (1); } 
    }
    response (flux); flux {type fluxResponse;}
    //handleVirtual 1;
  }
  }

inactiveTally {
              }

activeTally  {
                display (k_eff);
                //norm fiss;
                //normVal 100.0;
                k_eff { type keffAnalogClerk;}
                //fiss { type collisionClerk; response (fiss); fiss {type macroResponse; MT -6;}}
                //flux { type collisionClerk;
                //        map { type energyMap; grid log; min 0.001; max 20; N 300;}
                //        response (flux); flux {type fluxResponse;}
                //      }
        }

geometry {
    type geometryStd;
    boundary (0 0 0 0 0 0);
    graph {type shrunk;}

    surfaces
    {
      sphereOne { type sphere; id 1; origin ( 0.0 0.0 0.0); radius 4.5332; } 
      sphereTwo { type sphere; id 2; origin ( 0.0 0.0 0.0); radius 24.1420; } 
    } 

    cells
    {
      cellOne { id 1; type simpleCell; surfaces (-1); filltype mat; material m1;} 
      cellTwo { id 2; type simpleCell; surfaces (1 -2); filltype mat; material m2;}
    }

    universes
    {

      root{id 1; type rootUniverse; border 2; fill u<2>;}
      geom { id 2; type cellUniverse; cells ( 1 2 );}
    }
}

nuclearData {
  handles {
    ce { type aceNeutronDatabase; aceLibrary $SCONE_ACE;} }
  materials {

    m1 {
      temp 12345;
      composition {
        94239.03 0.036697000;
        94240.03 0.001870000; 
        94241.03 0.000116390;
        31000.03 0.001475500;
        }

    }


    m2 {
      temp 12345;
      composition {
        92234.03 0.0000026438; 
        92235.03 0.0003461000; 
        92238.03 0.0477210000;
        }

    }
}
}
